name: Java CI with Maven

on:
  push:
    branches: [ "a5" ]
  pull_request:
    branches: [ "a5" ]
    types: [closed]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup MySQL
      uses: mirromutth/mysql-action@v1.1
      with:
        mysql root password: 123456
    
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn clean package -Dmaven.test.skip=true

    - name: Install AWS CLI
      run: sudo apt-get update && sudo apt-get install -y awscli
    - name: Configure AWS CLI
      run: |
        aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws configure set default.region ${{ secrets.AWS_REGION }}
      
    - name: Setup HashiCorp Packer
      uses: hashicorp/setup-packer@v2.0.0
    - name: Pakcer init
      run: packer init packer.pkr.hcl
    - name: Packer Validate
      run: packer validate packer.pkr.hcl
    - name: Build AMI
      run: packer build  packer.pkr.hcl | tee output.txt
    - name: Get AMI Id
      run: |
        echo -n $(tail -n 5 output.txt | grep ami | awk '{print $NF}') > ami_id.txt
        cp ami_id.txt terraform/ec2/
      
    - name: Share AMI to Demo
      env:
        AWS_DEMO_ACCOUNT: ${{ secrets.AWS_DEMO_ACCOUNT }}
      run: aws ec2 modify-image-attribute --image-id $(cat ami_id.txt) --launch-permission "Add=[{UserId=$AWS_DEMO_ACCOUNT}]"

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.1.0

    - name: Create Env Terraform Init
      run: terraform -chdir=terraform/ init
    - name: Create Env Terraform Apply
      id: tf_apply
      run: |
        terraform -chdir=terraform/ apply -auto-approve
        terraform -chdir=terraform/ output myvpc_id | grep -oP '(?<=stdout: ").*(?=")' | tr -d '\n' > terraform/ec2/myvpc_id.txt
        terraform -chdir=terraform/ output mysubnet_id | grep -oP '(?<=stdout: ").*(?=")' | tr -d '\n' > terraform/ec2/mysubnet_id.txt
        terraform -chdir=terraform/ output s3_bucket_name | grep -oP '(?<=stdout: ").*(?=")' | tr -d '\n' > terraform/ec2/s3_bucket_name.txt
        terraform -chdir=terraform/ output rds_instance_endpoint | grep -oP '(?<=stdout: ").*(?=")' | tr -d '\n' > terraform/ec2/rds_instance_endpoint.txt

    - name: Deploy EC2 Terraform Init
      run: terraform -chdir=terraform/ec2/ init
    - name: Deploy EC2 Terraform Apply
      run: terraform -chdir=terraform/ec2/ apply -auto-approve
